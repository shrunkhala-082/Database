21 to 50


21. Find all customers whose CNUM is 1000 above the SNUM of Serres. 
->
Select * from customers
Where cnum>=1000+(select snum from salespeople where sname='Serres');


22. Give the salespeople’s commissions as percentages instead of decimal numbers. 
->
Select sname,concat(round((comm*100),2),'%') as comm_percent 
From salespeople;


23. Find the largest order taken by each salesperson on each date, eliminating those MAX orders 
which are less than $3000.00 in value. 
->
Select sname,odate,max(amt) max_amt
From orders o , salespeople s
Where o.snum=s.snum
Group by sname,odate
Having max(amt)>=3000;


24. List the largest orders for October 3, for each salesperson. 
->
Select sname,odate,max(amt) max_amt
From orders o , salespeople s
Where o.snum=s.snum
And odate='1996-10-03'
Group by sname,odate;

25. Find all customers located in cities where Serres (SNUM 1002) has customers. 
->
Select * from customers
Where city in (
Select c.city from customers c, salespeople s 
Where s.snum=c.snum
And sname='Serres');


26. Select all customers with a rating above 200.00. 
->
Select * from customers where rating>200;



27. Count the number of salespeople currently listing orders in the Orders table. 
->
Select count(distinct snum) from orders;



28. Write a query that produces all customers serviced by salespeople with a commission above 
12%. Output the customer’s name and the salesperson’s rate of commission. 
->
Select cname,sname,comm
From customers c, salespeople s
Where c.snum=s.snum
And comm>.12;


29. Find salespeople who have multiple customers. 
->
Select sname,s.snum,count(distinct cnum)
From customers c , salespeople s
Where c.snum=s.snum
Group by sname,s.snum;



30. Find salespeople with customers located in their city. 
->
Select sname,cname,c.city
From customers c , salespeople s
Where c.snum=s.snum
And s.city=c.city;




31. Find all salespeople whose name starts with ‘P’ and the fourth character is ‘l’. 
->
Select * from salespeople where sname like 'p__l%';

32. Write a query that uses a subquery to obtain all orders for the customer named Cisneros. 
Assume you do not know his customer number. 
->
Select  * from orders where cnum in (select cnum 
From customers where cname='Cisneros');

33. Find the largest orders for Serres and Rifkin. 
->
Select sname,max(amt)
From orders o  , salespeople s 
Where o.snum=s.snum
And sname in ('Serres','Rifkin')
Group by sname;

34. Extract the Salespeople table in the following order : SNUM, SNAME, COMMISSION, CITY. 
->
Select SNUM, SNAME, comm COMMISSION, CITY
From salespeople;

35. Select all customers whose names fall in between ‘A’ and ‘G’ alphabetical range. 
->
Select * from customers where left(cname,1) between 'a' and 'g';

36. Select all the possible combinations of customers that you can assign. 
->
Select c1.cname,c2.cname from customers c1, customers c2
Where c1.cnum<c2.cnum;

37. Select all orders that are greater than the average for October 4. 
->
select * from orders where amt>(select avg(amt) from orders where odate="1996-10-04"
);
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1996-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
| 3008 | 4723.00 | 1996-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+
7 rows in set (0.00 sec)
38. Write a select command using a corelated subquery that selects the names and numbers of all
customers with ratings equal to the maximum for their city.
->
select cname from customers c where exists (select 1 from customers c1 where c.city=c1.city group by city  having max(c1.rating)=c.rating);
+----------+
| cname    |
+----------+
| Hoffman  |
| Giovanni |
| Grass    |
| Clemens  |
| Cisneros |
+----------+
 Select cname,cnum from customers co
    -> Where exists
    -> (select 1 from customers ci
    -> Where co.city=ci.city
    -> Group by city having max(ci.rating)=co.rating );
+----------+------+
| cname    | cnum |
+----------+------+
| Hoffman  | 2001 |
| Giovanni | 2002 |
| Grass    | 2004 |
| Clemens  | 2006 |
| Cisneros | 2008 |
+----------+------+


39. Write a query that totals the orders for each day and places the results in descending order.
->  select odate,sum(amt)  from orders  group by odate order by sum(amt) desc;
+------------+----------+
| odate      | sum(amt) |
+------------+----------+
| 1996-10-06 | 11201.83 |
| 1996-10-03 |  8944.59 |
| 1996-10-05 |  4723.00 |
| 1996-10-04 |  1788.98 |
+------------+----------+

40. Write a select command that produces the rating followed by the name of each customer in
San Jose.
-> select cname,rating from customers where city="san jose";
+----------+--------+
| cname    | rating |
+----------+--------+
| Liu      |    200 |
| Cisneros |    300 |
+----------+--------+

41. Find all orders with amounts smaller than any amount for a customer in San Jose.
->
select * from orders where amt<any
    -> (select amt from orders o , customers c
    -> Where o.cnum=c.cnum and city='San Jose');
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 | 1007 |
| 3002 | 1900.10 | 1996-10-03 | 2007 | 1004 |
| 3003 |  767.19 | 1996-10-03 | 2001 | 1001 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
| 3007 |   75.75 | 1996-10-04 | 2002 | 1003 |
| 3008 | 4723.00 | 1996-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
+------+---------+------------+------+------+
->
42. Find all orders with above average amounts for their customers.
->
 select o.* from orders o where amt>(select avg(amt) from orders);
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 3008 | 4723.00 | 1996-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
+------+---------+------------+------+------+
43. Write a query that selects the highest rating in each city.
->
select max(rating) ,city from customers group by city  ;
+-------------+----------+
| max(rating) | city     |
+-------------+----------+
|         100 | London   |
|         200 | Rome     |
|         300 | San Jose |
|         300 | Berlin   |
+-------------+----------+
4 rows in set (0.00 sec)
44. Write a query that calculates the amount of the salesperson’s commission on each order by a
customer with a rating above 100.00.
->
select distinct (amt),comm,cname,sname,odate from salespeople s inner join customers c  inner join  orders o on s.snum=c.snum and c.snum=o.snum and o.snum=s.snum and rating >100;
+---------+------+----------+---------+------------+
| amt     | comm | cname    | sname   | odate      |
+---------+------+----------+---------+------------+
|   75.75 | 0.10 | Giovanni | AxelRod | 1996-10-04 |
| 1713.23 | 0.10 | Giovanni | AxelRod | 1996-10-04 |
| 5160.45 | 0.13 | Liu      | Serres  | 1996-10-03 |
| 1309.95 | 0.13 | Liu      | Serres  | 1996-10-06 |
| 5160.45 | 0.13 | Grass    | Serres  | 1996-10-03 |
| 1309.95 | 0.13 | Grass    | Serres  | 1996-10-06 |
|   18.69 | 0.15 | Cisneros | Rifkin  | 1996-10-03 |
| 1098.16 | 0.15 | Cisneros | Rifkin  | 1996-10-03 |
+---------+------+----------+---------+------------+
->

45. Count the customers with ratings above San Jose’s average.
->
elect cname,cnum from customers where rating>(select avg(rating) from customers where city="san jose");
+----------+------+
| cname    | cnum |
+----------+------+
| Grass    | 2004 |
| Cisneros | 2008 |
+----------+------+
46. Write a query that produces all pairs of salespeople with themselves as well as duplicate rows
with the order reversed.
->
 select s.*,s1.* from salespeople s,salespeople s1;
+------+---------+-----------+------+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM | SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+------+---------+-----------+------+
| 1007 | Rifkin  | Barcelona | 0.15 | 1001 | Peel    | London    | 0.12 |
| 1005 | Fran    | London    | 0.26 | 1001 | Peel    | London    | 0.12 |
| 1004 | Motika  | London    | 0.11 | 1001 | Peel    | London    | 0.12 |
| 1003 | AxelRod | New York  | 0.10 | 1001 | Peel    | London    | 0.12 |
| 1002 | Serres  | San Jose  | 0.13 | 1001 | Peel    | London    | 0.12 |
| 1001 | Peel    | London    | 0.12 | 1001 | Peel    | London    | 0.12 |
| 1007 | Rifkin  | Barcelona | 0.15 | 1002 | Serres  | San Jose  | 0.13 |
| 1005 | Fran    | London    | 0.26 | 1002 | Serres  | San Jose  | 0.13 |
| 1004 | Motika  | London    | 0.11 | 1002 | Serres  | San Jose  | 0.13 |
| 1003 | AxelRod | New York  | 0.10 | 1002 | Serres  | San Jose  | 0.13 |
| 1002 | Serres  | San Jose  | 0.13 | 1002 | Serres  | San Jose  | 0.13 |
| 1001 | Peel    | London    | 0.12 | 1002 | Serres  | San Jose  | 0.13 |
| 1007 | Rifkin  | Barcelona | 0.15 | 1003 | AxelRod | New York  | 0.10 |
| 1005 | Fran    | London    | 0.26 | 1003 | AxelRod | New York  | 0.10 |
| 1004 | Motika  | London    | 0.11 | 1003 | AxelRod | New York  | 0.10 |
| 1003 | AxelRod | New York  | 0.10 | 1003 | AxelRod | New York  | 0.10 |
| 1002 | Serres  | San Jose  | 0.13 | 1003 | AxelRod | New York  | 0.10 |
| 1001 | Peel    | London    | 0.12 | 1003 | AxelRod | New York  | 0.10 |
| 1007 | Rifkin  | Barcelona | 0.15 | 1004 | Motika  | London    | 0.11 |
| 1005 | Fran    | London    | 0.26 | 1004 | Motika  | London    | 0.11 |
| 1004 | Motika  | London    | 0.11 | 1004 | Motika  | London    | 0.11 |
| 1003 | AxelRod | New York  | 0.10 | 1004 | Motika  | London    | 0.11 |
| 1002 | Serres  | San Jose  | 0.13 | 1004 | Motika  | London    | 0.11 |
| 1001 | Peel    | London    | 0.12 | 1004 | Motika  | London    | 0.11 |
| 1007 | Rifkin  | Barcelona | 0.15 | 1005 | Fran    | London    | 0.26 |
| 1005 | Fran    | London    | 0.26 | 1005 | Fran    | London    | 0.26 |
| 1004 | Motika  | London    | 0.11 | 1005 | Fran    | London    | 0.26 |
| 1003 | AxelRod | New York  | 0.10 | 1005 | Fran    | London    | 0.26 |
| 1002 | Serres  | San Jose  | 0.13 | 1005 | Fran    | London    | 0.26 |
| 1001 | Peel    | London    | 0.12 | 1005 | Fran    | London    | 0.26 |
| 1007 | Rifkin  | Barcelona | 0.15 | 1007 | Rifkin  | Barcelona | 0.15 |
| 1005 | Fran    | London    | 0.26 | 1007 | Rifkin  | Barcelona | 0.15 |
| 1004 | Motika  | London    | 0.11 | 1007 | Rifkin  | Barcelona | 0.15 |
| 1003 | AxelRod | New York  | 0.10 | 1007 | Rifkin  | Barcelona | 0.15 |
| 1002 | Serres  | San Jose  | 0.13 | 1007 | Rifkin  | Barcelona | 0.15 |
| 1001 | Peel    | London    | 0.12 | 1007 | Rifkin  | Barcelona | 0.15 |
+------+---------+-----------+------+------+---------+-----------+------+
47. Find all salespeople that are located in either Barcelona or London.
->elect sname from salespeople where city in ("london","barcelona");
+--------+
| sname  |
+--------+
| Peel   |
| Motika |
| Fran   |
| Rifkin |
+--------+
48. Find all salespeople with only one customer.

49. Write a query that joins the Customer table to itself to find all pairs of customers served by a
single salesperson.
50. Write a query that will give you all orders for more than $1000.00
->
 select * from orders where amt>1000;
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3002 | 1900.10 | 1996-10-03 | 2007 | 1004 |
| 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
| 3008 | 4723.00 | 1996-10-05 | 2006 | 1001 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
| 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
+------+---------+------------+------+--