1. List all the columns of the Salespeople table.
->
 select * from salespeople;
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    | 0.12 |
| 1002 | Serres  | San Jose  | 0.13 |
| 1003 | AxelRod | New York  | 0.10 |
| 1004 | Motika  | London    | 0.11 |
| 1005 | Fran    | London    | 0.26 |
| 1007 | Rifkin  | Barcelona | 0.15 |
+------+---------+-----------+------+


2. List all customers with a rating of 100.
->
select * from customers where rating =100;
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+

3. Find all records in the Customer table with NULL values in the city column.
->
Empty set (0.00 sec)

4. Find the largest order taken by each salesperson on each date.
->
 Select sname,odate,max(amt) max_amt
    -> From orders o , salespeople s
    -> Where o.snum=s.snum
    -> Group by sname,odate;
+---------+------------+---------+
| sname   | odate      | max_amt |
+---------+------------+---------+
| Rifkin  | 1996-10-03 | 1098.16 |
| Motika  | 1996-10-03 | 1900.10 |
| Peel    | 1996-10-03 |  767.19 |
| Serres  | 1996-10-03 | 5160.45 |
| AxelRod | 1996-10-04 | 1713.23 |
| Peel    | 1996-10-05 | 4723.00 |
| Serres  | 1996-10-06 | 1309.95 |
| Peel    | 1996-10-06 | 9891.88 |
+---------+------------+---------+

5. Arrange the Orders table by descending customer number.
->

mysql> select * from orders order by cnum desc;
+------+---------+------------+------+------+
| ONUM | AMT     | ODATE      | CNUM | SNUM |
+------+---------+------------+------+------+
| 3001 |   18.69 | 1996-10-03 | 2008 | 1007 |
| 3006 | 1098.16 | 1996-10-03 | 2008 | 1007 |
| 3002 | 1900.10 | 1996-10-03 | 2007 | 1004 |
| 3008 | 4723.00 | 1996-10-05 | 2006 | 1001 |
| 3011 | 9891.88 | 1996-10-06 | 2006 | 1001 |
| 3010 | 1309.95 | 1996-10-06 | 2004 | 1002 |
| 3005 | 5160.45 | 1996-10-03 | 2003 | 1002 |
| 3007 |   75.75 | 1996-10-04 | 2002 | 1003 |
| 3009 | 1713.23 | 1996-10-04 | 2002 | 1003 |
| 3003 |  767.19 | 1996-10-03 | 2001 | 1001 |
+------+---------+------------+------+------+
6. Find which salespeople currently have orders in the Orders table.
->

7. List names of all customers matched with the salespeople serving them.
->
 select cname,sname from customers c,salespeople s where c.snum=s.snum;
+----------+---------+
| cname    | sname   |
+----------+---------+
| Hoffman  | Peel    |
| Giovanni | AxelRod |
| Liu      | Serres  |
| Grass    | Serres  |
| Clemens  | Peel    |
| Pereira  | Motika  |
| Cisneros | Rifkin  |
+----------+---------+
7 rows in set (0.00 sec)
8. Find the names and numbers of all salespeople who had more than one customer.
->
 select s.snum,sname from salespeople s inner join customers c on s.snum=c.snum group by s.snum,sname having count(cnum)>1;
+------+--------+
| snum | sname  |
+------+--------+
| 1001 | Peel   |
| 1002 | Serres |
+------+--------+

9. Count the orders of each of the salespeople and output the results in descending order.
->
 select sname, count(onum) from salespeople s join orders o on s.snum=o.snum group by sname;
+---------+-------------+
| sname   | count(onum) |
+---------+-------------+
| Peel    |           3 |
| Serres  |           2 |
| AxelRod |           2 |
| Motika  |           1 |
| Rifkin  |           2 |
+---------+-------------+
10. List the Customer table if and only if one or more of the customers in the Customer table are
located in San Jose.
->
 select * from customers where exists(select 1 from customers where city="san jose");
+------+----------+----------+--------+------+
| CNUM | CNAME    | CITY     | RATING | SNUM |
+------+----------+----------+--------+------+
| 2001 | Hoffman  | London   |    100 | 1001 |
| 2002 | Giovanni | Rome     |    200 | 1003 |
| 2003 | Liu      | San Jose |    200 | 1002 |
| 2004 | Grass    | Berlin   |    300 | 1002 |
| 2006 | Clemens  | London   |    100 | 1001 |
| 2007 | Pereira  | Rome     |    100 | 1004 |
| 2008 | Cisneros | San Jose |    300 | 1007 |
+------+----------+----------+--------+------+

11. Match salespeople to customers according to what city they lived in.
-> 
 select * from salespeople s inner join customers c on s.snum=c.snum w
here s.city=c.city;
+------+--------+----------+------+------+---------+----------+--------+------+
| SNUM | SNAME  | CITY     | COMM | CNUM | CNAME   | CITY     | RATING | SNUM |
+------+--------+----------+------+------+---------+----------+--------+------+
| 1001 | Peel   | London   | 0.12 | 2001 | Hoffman | London   |    100 | 1001 |
| 1002 | Serres | San Jose | 0.13 | 2003 | Liu     | San Jose |    200 | 1002 |
| 1001 | Peel   | London   | 0.12 | 2006 | Clemens | London   |    100 | 1001

12. Find the largest order taken by each salesperson.
->
 select sname,max(amt) from orders o inner join salespeople s where o.snum=s.snum group by sname;
+---------+----------+
| sname   | max(amt) |
+---------+----------+
| Rifkin  |  1098.16 |
| Motika  |  1900.10 |
| Peel    |  9891.88 |
| Serres  |  5160.45 |
| AxelRod |  1713.23 |
+---------+----------+

13. Find customers in San Jose who have a rating above 200.
->
select cname from customers where city="san jose" and rating >200;
+----------+
| cname    |
+----------+
| Cisneros |
+----------+

14. List the names and commissions of all salespeople in London.
->select sname, comm from salespeople where city="london";
+--------+------+
| sname  | comm |
+--------+------+
| Peel   | 0.12 |
| Motika | 0.11 |
| Fran   | 0.26 |
+--------+------+

15. List all the orders of salesperson Motika from the Orders table.
->
select sname,onum from salespeople s inner join orders o on s.snum=o.snum where sname="motika";
+--------+------+
| sname  | onum |
+--------+------+
| Motika | 3002 |
+--------+------+
16. Find all customers with orders on October 3.
->
select c.*,onum,odate from customers c inner join orders o on c.snum=o.snum where odate ="1996-10-03";
+------+----------+----------+--------+------+------+------------+
| CNUM | CNAME    | CITY     | RATING | SNUM | onum | odate      |
+------+----------+----------+--------+------+------+------------+
| 2008 | Cisneros | San Jose |    300 | 1007 | 3001 | 1996-10-03 |
| 2007 | Pereira  | Rome     |    100 | 1004 | 3002 | 1996-10-03 |
| 2001 | Hoffman  | London   |    100 | 1001 | 3003 | 1996-10-03 |
| 2006 | Clemens  | London   |    100 | 1001 | 3003 | 1996-10-03 |
| 2003 | Liu      | San Jose |    200 | 1002 | 3005 | 1996-10-03 |
| 2004 | Grass    | Berlin   |    300 | 1002 | 3005 | 1996-10-03 |
| 2008 | Cisneros | San Jose |    300 | 1007 | 3006 | 1996-10-03 |
+------+----------+----------+--------+------+------+------------+
17. Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000.00 above the MAX amount. 
-> 
select max(amt) from orders;
+----------+
| max(amt) |
+----------+
|  9891.88 |
+----------+

18. Select all orders that had amounts that were greater than at least one of the orders from
October 6.
->select odate,onum from orders where amt>(select min(amt) from orders
where odate="1996-10-06");
+------------+------+
| odate      | onum |
+------------+------+
| 1996-10-03 | 3002 |
| 1996-10-03 | 3005 |
| 1996-10-05 | 3008 |
| 1996-10-04 | 3009 |
| 1996-10-06 | 3011 |
+------------+------+

19. Write a query that uses the EXISTS operator to extract all salespeople who have customers
with a rating of 300.
->
select s.* from salespeople s where exists (select cname from customers c where s.snum=c.snum and rating=300);
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1002 | Serres | San Jose  | 0.13 |
| 1007 | Rifkin | Barcelona | 0.15 |
+------+--------+-----------+------+
20. Find all pairs of customers having the same rating.
->
select * from customers c1,customers c2 where c1.cname<c2.cname and c1.rating=c2.rating;
+------+----------+----------+--------+------+------+---------+----------+--------+------+
| CNUM | CNAME    | CITY     | RATING | SNUM | CNUM | CNAME   | CITY     | RATING | SNUM |
+------+----------+----------+--------+------+------+---------+----------+--------+------+
| 2006 | Clemens  | London   |    100 | 1001 | 2001 | Hoffman | London   |    100 | 1001 |
| 2002 | Giovanni | Rome     |    200 | 1003 | 2003 | Liu     | San Jose |    200 | 1002 |
| 2008 | Cisneros | San Jose |    300 | 1007 | 2004 | Grass   | Berlin   |    300 | 1002 |
| 2006 | Clemens  | London   |    100 | 1001 | 2007 | Pereira | Rome     |    100 | 1004 |
| 2001 | Hoffman  | London   |    100 | 1001 | 2007 | Pereira | Rome     |    100 | 1004 |
+------+----------+----------+--------+------+------+---------+----------+--------+------+

21. Find all customers whose CNUM is 1000 above the SNUM of Serres.
->
select c.* from customers c inner join salespeople s  where cnum>=1000+s.snum and s.sname="serres";
+------+----------+----------+--------+------+
| CNUM | CNAME    | CITY     | RATING | SNUM |
+------+----------+----------+--------+------+
| 2002 | Giovanni | Rome     |    200 | 1003 |
| 2003 | Liu      | San Jose |    200 | 1002 |
| 2004 | Grass    | Berlin   |    300 | 1002 |
| 2006 | Clemens  | London   |    100 | 1001 |
| 2007 | Pereira  | Rome     |    100 | 1004 |
| 2008 | Cisneros | San Jose |    300 | 1007 |
+------+----------+----------+--------+------+
22. Give the salespeopleâ€™s commissions as percentages instead of decimal numbers.
->
select concat(round(comm*100),'%') percentage from salespeople;
+------------+
| percentage |
+------------+
| 12%        |
| 13%        |
| 10%        |
| 11%        |
| 26%        |
| 15%        |

23. Find the largest order taken by each salesperson on each date, eliminating those MAX orders
which are less than $3000.00 in value.
->
 select sname,odate ,max(amt)from salespeople s inner join orders o where s.snum=o.snum group by sname,odate having max(amt)<=3000;
+---------+------------+----------+
| sname   | odate      | max(amt) |
+---------+------------+----------+
| Rifkin  | 1996-10-03 |  1098.16 |
| Motika  | 1996-10-03 |  1900.10 |
| Peel    | 1996-10-03 |   767.19 |
| AxelRod | 1996-10-04 |  1713.23 |
| Serres  | 1996-10-06 |  1309.95 |
+---------+------------+----------+

24. List the largest orders for October 3, for each salesperson.
-> select sname,odate, max(amt) from salespeople s inner join orders o on s.snum=o.snum group by sname,odate having odate='1996-10-03';
+--------+------------+----------+
| sname  | odate      | max(amt) |
+--------+------------+----------+
| Rifkin | 1996-10-03 |  1098.16 |
| Motika | 1996-10-03 |  1900.10 |
| Peel   | 1996-10-03 |   767.19 |
| Serres | 1996-10-03 |  5160.45 |
+--------+------------+----------+

25. Find all customers located in cities where Serres (SNUM 1002) has customers.-
->
select c.* from customers c, salespeople s where s.snum=c.snum and s.sname="serres" ;
+------+-------+----------+--------+------+
| CNUM | CNAME | CITY     | RATING | SNUM |
+------+-------+----------+--------+------+
| 2003 | Liu   | San Jose |    200 | 1002 |
| 2004 | Grass | Berlin   |    300 | 1002 |
+------+-------+----------+--------+------+

26. Select all customers with a rating above 200.00.
->
 select cname from customers where rating=200;
+----------+
| cname    |
+----------+
| Giovanni |
| Liu      |
+----------+

27. Count the number of salespeople currently listing orders in the Orders table.

28. Write a query that produces all customers serviced by salespeople with a commission above 12%. Output the customerâ€™s name and the salespersonâ€™s rate of commission
->
 select c.* ,comm from salespeople s,customers c where s.snum=c.snum and comm>=0.12;
+------+----------+----------+--------+------+------+
| CNUM | CNAME    | CITY     | RATING | SNUM | comm |
+------+----------+----------+--------+------+------+
| 2001 | Hoffman  | London   |    100 | 1001 | 0.12 |
| 2006 | Clemens  | London   |    100 | 1001 | 0.12 |
| 2003 | Liu      | San Jose |    200 | 1002 | 0.13 |
| 2004 | Grass    | Berlin   |    300 | 1002 | 0.13 |
| 2008 | Cisneros | San Jose |    300 | 1007 | 0.15 |
+------+----------+----------+--------+------+------+
.
29. Find salespeople who have multiple customers.
->
\select sname from salespeople s,customers c where c.snum=s.snum group by sname having count(sname)>1;
+--------+
| sname  |
+--------+
| Peel   |
| Serres |
+--------+


30. Find salespeople with customers located in their city.
->
select sname,cname,c.city from salespeople s,customers c where c.snum=s.snum and s.city=c.city;
+--------+---------+----------+
| sname  | cname   | city     |
+--------+---------+----------+
| Peel   | Hoffman | London   |
| Serres | Liu     | San Jose |
| Peel   | Clemens | London   |
+--------+---------+----------+
31. Find all salespeople whose name starts with â€˜Pâ€™ and the fourth character is â€˜lâ€™.
->
select sname from salespeople where sname like "p__l";
+-------+
| sname |
+-------+
| Peel  |
+-------+
32. Write a query that uses a subquery to obtain all orders for the customer named Cisneros.
->

Assume you do not know his customer number.
33. Find the largest orders for Serres and Rifkin.
->
 select s.sname,max(amt) from orders o inner join salespeople s on s.snum=o.snum where sname in ('rifkin','serres') group by s.sname ;
+--------+----------+
| sname  | max(amt) |
+--------+----------+
| Serres |  5160.45 |
| Rifkin |  1098.16 |
+--------+----------+

34. Extract the Salespeople table in the following order : SNUM, SNAME, COMMISSION, CITY.
->
select snum,sname,comm,city from salespeople;
+------+---------+------+-----------+
| snum | sname   | comm | city      |
+------+---------+------+-----------+
| 1001 | Peel    | 0.12 | London    |
| 1002 | Serres  | 0.13 | San Jose  |
| 1003 | AxelRod | 0.10 | New York  |
| 1004 | Motika  | 0.11 | London    |
| 1005 | Fran    | 0.26 | London    |
| 1007 | Rifkin  | 0.15 | Barcelona |
+------+---------+------+-----------+
35. Select all customers whose names fall in between â€˜Aâ€™ and â€˜Gâ€™ alphabetical range.
-> Select * from customers where left(cname,1) between 'a' and 'g';
+------+----------+----------+--------+------+
| CNUM | CNAME    | CITY     | RATING | SNUM |
+------+----------+----------+--------+------+
| 2002 | Giovanni | Rome     |    200 | 1003 |
| 2004 | Grass    | Berlin   |    300 | 1002 |
| 2006 | Clemens  | London   |    100 | 1001 |
| 2008 | Cisneros | San Jose |    300 | 1007 |
+------+----------+----------+--------+------+
36. Select all the possible combinations of customers that you can assign.
->
 select c1.*,c2.* from customers c1,customers c2 where c1.cname>c2.cname;
+------+----------+----------+--------+------+------+----------+----------+--------+------+
| CNUM | CNAME    | CITY     | RATING | SNUM | CNUM | CNAME    | CITY     | RATING | SNUM |
+------+----------+----------+--------+------+------+----------+----------+--------+------+
| 2007 | Pereira  | Rome     |    100 | 1004 | 2001 | Hoffman  | London   |    100 | 1001 |
| 2003 | Liu      | San Jose |    200 | 1002 | 2001 | Hoffman  | London   |    100 | 1001 |
| 2007 | Pereira  | Rome     |    100 | 1004 | 2002 | Giovanni | Rome     |    200 | 1003 |
| 2004 | Grass    | Berlin   |    300 | 1002 | 2002 | Giovanni | Rome     |    200 | 1003 |
| 2003 | Liu      | San Jose |    200 | 1002 | 2002 | Giovanni | Rome     |    200 | 1003 |
| 2001 | Hoffman  | London   |    100 | 1001 | 2002 | Giovanni | Rome     |    200 | 1003 |
| 2007 | Pereira  | Rome     |    100 | 1004 | 2003 | Liu      | San Jose |    200 | 1002 |
| 2007 | Pereira  | Rome     |    100 | 1004 | 2004 | Grass    | Berlin   |    300 | 1002 |
| 2003 | Liu      | San Jose |    200 | 1002 | 2004 | Grass    | Berlin   |    300 | 1002 |
| 2001 | Hoffman  | London   |    100 | 1001 | 2004 | Grass    | Berlin   |    300 | 1002 |
| 2007 | Pereira  | Rome     |    100 | 1004 | 2006 | Clemens  | London   |    100 | 1001 |
| 2004 | Grass    | Berlin   |    300 | 1002 | 2006 | Clemens  | London   |    100 | 1001 |
| 2003 | Liu      | San Jose |    200 | 1002 | 2006 | Clemens  | London   |    100 | 1001 |
| 2002 | Giovanni | Rome     |    200 | 1003 | 2006 | Clemens  | London   |    100 | 1001 |
| 2001 | Hoffman  | London   |    100 | 1001 | 2006 | Clemens  | London   |    100 | 1001 |
| 2007 | Pereira  | Rome     |    100 | 1004 | 2008 | Cisneros | San Jose |    300 | 1007 |
| 2006 | Clemens  | London   |    100 | 1001 | 2008 | Cisneros | San Jose |    300 | 1007 |
| 2004 | Grass    | Berlin   |    300 | 1002 | 2008 | Cisneros | San Jose |    300 | 1007 |
| 2003 | Liu      | San Jose |    200 | 1002 | 2008 | Cisneros | San Jose |    300 | 1007 |
| 2002 | Giovanni | Rome     |    200 | 1003 | 2008 | Cisneros | San Jose |    300 | 1007 |
| 2001 | Hoffman  | London   |    100 | 1001 | 2008 | Cisneros | San Jose |    300 | 1007 |
+------+----------+----------+--------+------+------+----------+----------+--------+------+

37. Select all orders that are greater than the average for October 4.
->
38. Write a select command using a corelated subquery that selects the names and numbers of all
customers with ratings equal to the maximum for their city.
39. Write a query that totals the orders for each day and places the results in descending order.
40. Write a select command that produces the rating followed by the name of each customer in
San Jose.